import{_ as s,c as i,f as a,o as n}from"./app-BN96JEDe.js";const t={};function l(p,e){return n(),i("div",null,e[0]||(e[0]=[a('<h2 id="缘故" tabindex="-1"><a class="header-anchor" href="#缘故"><span>缘故</span></a></h2><p>最近我接触一个项目，因为数据安全要求比较高，主管给我分配的电脑并没有接入到互联网（外网环境），但是却需要在这个电脑上开发项目，并且我询问主管是否公司有在内网建有私有的镜像源，类似淘宝镜像源，不然很难安装依赖，得到的答复是并没有。</p><h2 id="思考🤔" tabindex="-1"><a class="header-anchor" href="#思考🤔"><span>思考🤔</span></a></h2><p>我首先想到的方式是直接将能连接互联网的电脑上的同一个项目的node_modules直接copy到安全优盘，然后通过优盘这样的硬件拷贝到电脑上。 我尝试了下，但是这样的方式显然并不是很优雅。而且我开发的这个项目是基于pnpm，node_modules中并不仅仅有依赖，还有各种依赖的缓存数据等等，尝试了下，明明node_modules中有对应的依赖信息，并且检查了lock.yaml文件，也确实一些关键信息也存在，但是移植到开发主机的项目中，最终的结果依然提示部分的modules not find的信息。很显然我忽略了什么。 有没有直接将包下载到本地或者通过一种本地镜像的方式下载依赖呢？ 下面就是我的解决方案。</p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h2><h3 id="环境配置" tabindex="-1"><a class="header-anchor" href="#环境配置"><span>环境配置</span></a></h3><p>首先我需要在开发主机中全局安装 pnpm（开发主机连基本的依赖环境也没有，node 我通过tar文件安装了，并配置好了全局变量）</p><p>通过以下的命令，将pnpm包下载到本地</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pack</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pnpm</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以执行命令的文件路径找到 pnpm-XXX.tgz 包文件</p><p>将这个包拷贝到开发主机的目录中，在开发主机执行</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --global</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pnpm-XXX.tgz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将安装对应版本的pnpm 包管理工具。</p><p>通过以上的环境安装的方式，似乎已经想到一种方式了，就是一个包一个包的下载到本地，然后全部copy到开发主机中，就可以进行对应的包安装，一个一个的安装，显然这样的方式非常不优雅。下面我将介绍一个更加方便的方式。</p><h3 id="pnpm缓存备份" tabindex="-1"><a class="header-anchor" href="#pnpm缓存备份"><span>pnpm缓存备份</span></a></h3><p>其实我们只需要有项目的所有的package.json就可以执行<code>pnpm i</code> 安装所有的依赖包，同时pnpm 会将包的下载文件缓存部分到本地中，这样我们在开发别的项目的时候，就可以直接从本地缓存中快速的为项目安装依赖，这也是pnpm 有时候安装的时候非常快速的原因。</p><p>通过以下的命令查询当前主机的pnpm的缓存路径</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> store</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> path</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后将当前的pnpm 缓存copy到开发主机中，再在开发主机中执行 <code>pnpm i</code>就可以直接通过缓存安装依赖了，并且十分的快速。 这样就解决了脱网安装前端依赖的问题。</p>',19)]))}const r=s(t,[["render",l],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/article/fh3232321/","title":"如何在一个内网环境下安装前端依赖","lang":"zh-CN","frontmatter":{"title":"如何在一个内网环境下安装前端依赖","tags":["pnpm","npm"],"createTime":"2024/12/06 13:42:21","permalink":"/article/fh3232321/"},"headers":[{"level":2,"title":"缘故","slug":"缘故","link":"#缘故","children":[]},{"level":2,"title":"思考🤔","slug":"思考🤔","link":"#思考🤔","children":[]},{"level":2,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[{"level":3,"title":"环境配置","slug":"环境配置","link":"#环境配置","children":[]},{"level":3,"title":"pnpm缓存备份","slug":"pnpm缓存备份","link":"#pnpm缓存备份","children":[]}]}],"readingTime":{"minutes":2.63,"words":789},"git":{"createdTime":1733464073000,"updatedTime":1735274990000,"contributors":[{"name":"Kittors","email":"364299311@qq.com","commits":1}]},"filePathRelative":"编程随想/2024年12月/在一个没有网络的环境如何安装依赖.md","categoryList":[{"id":"b19947","sort":10000,"name":"编程随想"},{"id":"364a0b","sort":10001,"name":"2024年12月"}],"bulletin":false}');export{r as comp,h as data};
